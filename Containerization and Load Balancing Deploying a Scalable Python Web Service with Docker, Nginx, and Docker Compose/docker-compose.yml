version: '3.8'

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_DB: shortener
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: pg_isready -U user -d shortener
      interval: 10s
      retries: 5

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      retries: 5

  web1:
    build: .
    environment:
      REDIS_HOST: redis
      DB_HOST: postgres
      DB_NAME: shortener
      DB_USER: user
      DB_PASS: password
      HOSTNAME: web1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  web2:
    build: .
    environment:
      REDIS_HOST: redis
      DB_HOST: postgres
      DB_NAME: shortener
      DB_USER: user
      DB_PASS: password
      HOSTNAME: web2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  web3:
    build: .
    environment:
      REDIS_HOST: redis
      DB_HOST: postgres
      DB_NAME: shortener
      DB_USER: user
      DB_PASS: password
      HOSTNAME: web3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
        
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 9999:80
    depends_on:
      - web1
      - web2
      - web3

volumes:
  postgres_data:
  redis_data: